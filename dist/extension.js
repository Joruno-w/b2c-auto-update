(()=>{var e={12:(e,t,a)=>{const s=a(398),o=a(896),r=a(928),n=a(23).promisify(a(317).exec);class c extends s.TreeItem{constructor(e,t,a){super("",s.TreeItemCollapsibleState.None),this.path=t,this.contextValue="project",this.tooltip=t,this.provider=a,this.projectName=r.basename(t),this.selected=!1,this.command={title:"Toggle Selection",command:"dependency-updater.toggleProject",arguments:[this]},this.updateBranchInfo()}async updateBranchInfo(){const e=await async function(e){try{const{stdout:t}=await n("git rev-parse --abbrev-ref HEAD",{cwd:e});return t.trim()}catch(e){return null}}(this.path);e?(this.iconPath=new s.ThemeIcon(this.selected?"check":"git-branch"),this.label=this.projectName,this.description=`on ${e}`,this.selected?(this.resourceUri=s.Uri.parse(`project-selected:${this.projectName}`),this.iconPath=new s.ThemeIcon("check",new s.ThemeColor("charts.green"))):this.resourceUri=s.Uri.parse(`project:${this.projectName}`)):(this.iconPath=new s.ThemeIcon(this.selected?"check":"folder"),this.label=this.projectName,this.selected&&(this.resourceUri=s.Uri.parse(`project-selected:${this.projectName}`),this.iconPath=new s.ThemeIcon("check",new s.ThemeColor("charts.green")))),this.provider&&this.provider.refresh()}toggleSelection(){this.selected=!this.selected,this.updateBranchInfo()}}class i extends s.TreeItem{constructor(){super("暂无项目，请点击右上角按钮选择项目文件夹",s.TreeItemCollapsibleState.None),this.iconPath=new s.ThemeIcon("folder-library")}}class d{constructor(){this._onDidChangeTreeData=new s.EventEmitter,this.onDidChangeTreeData=this._onDidChangeTreeData.event,this.projects=[]}refresh(){this._onDidChangeTreeData.fire()}getTreeItem(e){return e}getChildren(){return 0===this.projects.length?[new i]:this.projects}async setProjects(e){try{this.projects=[];const t=o.readdirSync(e);for(const a of t){const t=r.join(e,a);if(o.statSync(t).isDirectory()){const e=r.join(t,"package.json");if(o.existsSync(e)){const e=new c(a,t,this);this.projects.push(e)}}}await s.commands.executeCommand("setContext","dependency-updater:hasProjects",this.projects.length>0),this.refresh(),0===this.projects.length&&s.window.showInformationMessage("未找到包含 package.json 的项目")}catch(e){s.window.showErrorMessage(`读取文件夹失败: ${e.message}`)}}clearProjects(){this.projects=[],s.commands.executeCommand("setContext","dependency-updater:hasProjects",!1),this.refresh()}getSelectedProjects(){return this.projects.filter((e=>e.selected))}}class h extends s.TreeItem{constructor(e,t){super(e,s.TreeItemCollapsibleState.None),this.iconPath=new s.ThemeIcon("package"),this.contextValue="package",this.index=t}}class l{constructor(){this._onDidChangeTreeData=new s.EventEmitter,this.onDidChangeTreeData=this._onDidChangeTreeData.event,this.packages=[]}getTreeItem(e){return e}getChildren(){return 0===this.packages.length?[]:this.packages.map(((e,t)=>new h(e,t)))}addPackage(e){this.packages.push(e),this._onDidChangeTreeData.fire()}editPackage(e,t){this.packages[e]=t,this._onDidChangeTreeData.fire()}deletePackage(e){this.packages.splice(e,1),this._onDidChangeTreeData.fire()}clearPackages(){this.packages=[],this._onDidChangeTreeData.fire()}}async function p(e,t){try{const a=t.join(" ");return console.log(`Updating ${e} with packages: ${a}`),await n(`npm i ${a}`,{cwd:e}),await n("git add .",{cwd:e}),await n('git commit -m "feat: 更新依赖"',{cwd:e}),await n("git push",{cwd:e}),!0}catch(e){throw new Error(`更新失败: ${e.message}`)}}e.exports={activate:async function(e){const t=new d,a=new l,o=[s.commands.registerCommand("dependency-updater.addPackage",(async()=>{const e=await s.window.showInputBox({placeHolder:"输入包名@版本号，例如：lodash@4.17.21",validateInput:e=>e.includes("@")?null:"请按照 包名@版本号 的格式输入"});e&&a.addPackage(e)})),s.commands.registerCommand("dependency-updater.selectFolder",(async()=>{const e=await s.window.showOpenDialog({canSelectFolders:!0,canSelectFiles:!1,canSelectMany:!1,title:"选择项目根目录"});e&&e[0]&&t.setProjects(e[0].fsPath)})),s.commands.registerCommand("dependency-updater.clearProjects",(()=>{t.clearProjects()})),s.commands.registerCommand("dependency-updater.editPackage",(async e=>{const t=await s.window.showInputBox({value:e.label,placeHolder:"输入包名@版本号，例如：lodash@4.17.21",validateInput:e=>e.includes("@")?null:"请按照 包名@版本号 的格式输入"});t&&a.editPackage(e.index,t)})),s.commands.registerCommand("dependency-updater.deletePackage",(e=>{a.deletePackage(e.index)})),s.commands.registerCommand("dependency-updater.clearPackages",(()=>{a.clearPackages()})),s.commands.registerCommand("dependency-updater.toggleProject",(e=>{e instanceof c&&(e.toggleSelection(),t.refresh())})),s.commands.registerCommand("dependency-updater.updateDependencies",(async()=>{const e=t.getSelectedProjects(),o=a.packages;if(e.length){if(o.length)return s.window.withProgress({location:s.ProgressLocation.Notification,title:"批量更新依赖",cancellable:!1},(async t=>{try{const a=e.length;for(let s=0;s<a;s++){const r=e[s];t.report({message:`正在更新 ${r.projectName} (${s+1}/${a})`,increment:100/a}),await p(r.path,o)}s.window.showInformationMessage(`成功更新 ${a} 个项目`)}catch(e){s.window.showErrorMessage(`批量更新失败: ${e.message}`)}}));s.window.showInformationMessage("请添加要更新的依赖包")}else s.window.showInformationMessage("请选择要更新的项目")})),s.commands.registerCommand("dependency-updater.updateProject",(async e=>{if(!(e instanceof c))return;const t=a.packages;if(t.length)return s.window.withProgress({location:s.ProgressLocation.Notification,title:`正在更新项目: ${e.projectName}`,cancellable:!1},(async a=>{try{a.report({message:"正在执行更新..."}),await p(e.path,t),s.window.showInformationMessage(`项目 ${e.projectName} 更新完成`)}catch(e){s.window.showErrorMessage(e.message)}}));s.window.showInformationMessage("请先添加要更新的包")}))],r=[s.window.createTreeView("packageInputView",{treeDataProvider:a,showCollapseAll:!0}),s.window.createTreeView("dependencyUpdaterView",{treeDataProvider:t,showCollapseAll:!0})];e.subscriptions.push(...o,...r),await s.commands.executeCommand("setContext","dependency-updater:hasProjects",!1);const n=s.workspace.getConfiguration("workbench");await n.update("welcomePage.buttonBackground","#0098FF",s.ConfigurationTarget.Global),await n.update("welcomePage.buttonHoverBackground","#0070BE",s.ConfigurationTarget.Global),s.workspace.getConfiguration("workbench").update("colorCustomizations",{"list.activeSelectionForeground":"#5DAAB5","list.inactiveSelectionForeground":"#5DAAB5","gitDecoration.modifiedResourceForeground":"#D9739F","charts.green":"#4EC9B0"},s.ConfigurationTarget.Global);const i=s.workspace.getConfiguration("workbench");i.update("welcomePage.buttonBackground","#0098FF",s.ConfigurationTarget.Global),i.update("welcomePage.buttonHoverBackground","#0070BE",s.ConfigurationTarget.Global)}}},398:e=>{"use strict";e.exports=require("vscode")},317:e=>{"use strict";e.exports=require("child_process")},896:e=>{"use strict";e.exports=require("fs")},928:e=>{"use strict";e.exports=require("path")},23:e=>{"use strict";e.exports=require("util")}},t={},a=function a(s){var o=t[s];if(void 0!==o)return o.exports;var r=t[s]={exports:{}};return e[s](r,r.exports,a),r.exports}(12);module.exports=a})();